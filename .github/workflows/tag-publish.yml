name: Publish from Git Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  packages: write
  contents: read

jobs:
  publish-from-tag:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get Java configuration
      id: java_config
      run: |
        JAVA_VERSION=$(grep 'java.version=' gradle.properties | cut -d'=' -f2 || echo '21')
        JAVA_DISTRIBUTION=$(grep 'java.distribution=' gradle.properties | cut -d'=' -f2 || echo 'temurin')
        echo "java_version=$JAVA_VERSION" >> $GITHUB_OUTPUT
        echo "java_distribution=$JAVA_DISTRIBUTION" >> $GITHUB_OUTPUT
        echo "Using Java $JAVA_VERSION ($JAVA_DISTRIBUTION)"
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '${{ steps.java_config.outputs.java_version }}'
        distribution: '${{ steps.java_config.outputs.java_distribution }}'
        
    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION"
        
    - name: Update version in gradle.properties
      run: |
        sed -i "s/library.version=.*/library.version=${{ steps.extract_version.outputs.version }}/" gradle.properties
        
    - name: Build and publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPR_KEY: ${{ secrets.GITHUB_TOKEN }}
        GPR_USER: ${{ github.repository_owner }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        # Set up credentials for GitHub Packages
        echo "gpr.user=${{ github.repository_owner }}" >> gradle.properties
        echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" >> gradle.properties
        echo "github.owner=${{ github.repository_owner }}" >> gradle.properties
        echo "github.repo=${{ github.repository }}" >> gradle.properties
        ./gradlew clean build publish
        
    - name: Show published artifact info
      run: |
        echo "âœ… Successfully published version ${{ steps.extract_version.outputs.version }}"
        GROUP_ID=$(grep 'library.group=' gradle.properties | cut -d'=' -f2)
        ARTIFACT_ID=$(grep 'library.artifactId=' gradle.properties | cut -d'=' -f2)
        echo "ðŸ“¦ Package: ${GROUP_ID}:${ARTIFACT_ID}:${{ steps.extract_version.outputs.version }}"
        echo "ðŸ”— Repository: https://maven.pkg.github.com/${{ github.repository }}" 